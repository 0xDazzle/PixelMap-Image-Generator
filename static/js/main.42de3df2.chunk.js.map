{"version":3,"sources":["components/ImageUpload.tsx","components/GridSelect.tsx","utils/ImageResizer.js","components/TileCode.tsx","utils/ImageUtils.js","components/ImageDisplay.tsx","components/Home.tsx","App.tsx","index.tsx"],"names":["ImageUpload","props","className","encType","stroke","fill","viewBox","d","strokeWidth","strokeLinecap","strokeLinejoin","htmlFor","id","name","type","accept","onChange","e","target","files","changeImage","GridSelect","useState","highlightWidth","highlightHeight","setHighlight","hoverClass","col","row","grid","i","rows","j","push","onMouseEnter","onClick","changeGrid","onMouseLeave","style","width","height","Resizer","maxHeight","maxWidth","minWidth","minHeight","forceResize","Math","round","image","rotation","canvas","document","createElement","newHeightWidth","this","changeHeightWidth","ctx","getContext","fillStyle","fillRect","rotate","PI","translate","drawImage","b64Data","contentType","byteCharacters","atob","toString","replace","byteArrays","offset","length","slice","byteNumbers","Array","charCodeAt","byteArray","Uint8Array","b64toByteArrays","Blob","lastModified","Date","fileName","File","file","compressFormat","quality","responseUriFunc","outputType","reader","FileReader","Error","includes","readAsDataURL","onload","Image","src","result","resizedDataUrl","resizeAndRotateImage","blob","b64toBlob","newFileName","concat","newFile","b64toFile","onerror","error","createResizedImage","TileCode","copied","setCopied","code","navigator","clipboard","writeText","dimensionToPixels","dimension","componentToHex","c","hex","websafeColor","color","floor","quantum","rgbToWebsafeHex","r","g","b","rgbToHex","split","safe","join","ImageDisplay","resizedImage","setResizedImage","imageColors","setImageColors","tileCode","setTileCode","useEffect","cols","rawCanvas","colors","colorArray","y","x","rgb","getImageData","data","processColours","tileArray","pixelRowIndex","rowIndex","pixelSliceIndex","pixelSlice","index","arr","processTileCode","toDataURL","err","websafeImage","colorIndex","generateWebSafeImage","backgroundSize","alt","map","tile","tileId","Home","img","setImg","setGrid","href","rel","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.42de3df2.chunk.js","sourcesContent":["import React, { ChangeEvent } from 'react';\n\nexport default function ImageUpload(props: any) {\n    const handleImg = (e: ChangeEvent<HTMLInputElement>) => {\n      if(e.target && e.target.files && e.target.files[0]) {\n        props.changeImage(\n          e.target.files[0]\n        );    \n      }   \n    }\n\n    return (\n      <form className=\"flex flex-0 flex-grow px-6 pt-5 pb-6 border-2 border-gray-200 border-dashed rounded-md\" encType=\"multipart/form-data\">\n        <div className=\"space-y-1 text-center\">\n          <svg\n            className=\"mx-auto h-12 w-12 text-gray-400\"\n            stroke=\"currentColor\"\n            fill=\"none\"\n            viewBox=\"0 0 48 48\"\n            aria-hidden=\"true\"\n          >\n            <path\n              d=\"M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02\"\n              strokeWidth={2}\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            />\n          </svg>\n          <div className=\"flex text-sm text-gray-600 justify-center\">\n            <label\n              htmlFor=\"file-upload\"\n              className=\"relative cursor-pointer bg-white rounded-md font-medium text-indigo-600 hover:text-indigo-500 focus-within:outline-none focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-indigo-500\"\n            >\n              <span>Upload a file</span>\n              <input \n                id=\"file-upload\" \n                name=\"file-upload\" \n                type=\"file\"\n                accept=\".png\"\n                onChange={handleImg}\n                className=\"sr-only\" />\n            </label>\n          </div>\n          <p className=\"text-xs text-gray-500\">PNG only. For best results, ensure your image is crisp and pixel edges are sharp.</p>\n        </div>\n      </form>\n    );\n}","import React, { useState } from 'react';\n\nconst maxColumns = 6;\nconst maxRows = 6;\n\nexport default function GridSelect(props: any) {\n  const [{highlightWidth, highlightHeight}, setHighlight] = useState({highlightWidth: 0, highlightHeight: 0});\n\n  const hoverClass = (col: number, row: number) => {\n    setHighlight({\n      highlightWidth: row,\n      highlightHeight: col\n    });\n  }\n\n  const activeClass = (col: number, row: number) => {\n    setHighlight({\n      highlightWidth: 0,\n      highlightHeight: 0\n    });\n\n    //my head hurts as to why its reversed, but it works.\n    props.changeGrid(row, col);\n  }\n\n  let grid: any = [];\n\n  for( let i = 1; i <= maxColumns; i++ ) {\n    let rows: any = [];\n\n    for( let j = 1; j <= maxRows; j++ ) {\n      rows.push(\n        <div\n          className={`h-6 w-6 mr-0.5 mb-0.5 bg-gray-100`}\n          key={i*j}\n          onMouseEnter={() => hoverClass(i, j)}\n          onClick={() => activeClass(i, j)}>\n          \n        </div>\n      );\n    }\n\n    grid.push(rows);\n  }\n\n  /* \n    Highlight and Active container sizes are calculated using TailwindCSS rem values for widths and margins.\n    I use h-6 and w-6, which equals 1.5rem, and m-0.5 equals 0.125rem, totalling 1.625rem;\n  */\n\n  return (\n    <div className=\"flex flex-shrink-0 space-x-6\">\n      <div className=\"\">\n        <p className=\"font-medium text-sm mb-2 text-gray-800\">Tile size</p>\n        <p className=\"text-gray-900 font-bold\">{props.col} x {props.row}</p>\n        <p className=\"text-gray-900 font-bold\">{props.col * 16}px x {props.row * 16}px</p>\n      </div>\n      <div \n        className=\"w-42 h-42 relative\"\n        onMouseLeave={() => hoverClass(0, 0)}\n      >\n        <div \n          className=\"absolute bg-indigo-300 z-20 rounded-sm -ml-0.5 -mt-0.5\"\n          style={{\n            width: `${1.625 * highlightWidth + 0.125}rem`,\n            height: `${1.625 * highlightHeight + 0.125}rem`\n          }}>\n        </div>\n        <div \n          className=\"absolute bg-indigo-800 z-10 rounded-sm -ml-0.5 -mt-0.5\"\n          style={{\n            width: `${1.625 * props.col + 0.125}rem`,\n            height: `${1.625 * props.row + 0.125}rem`\n          }}>\n        </div>\n\n        <div className=\"flex flex-wrap relative z-30\">\n          {grid}\n        </div>\n        \n      </div>\n      \n    </div>\n  );\n}","/**\n *\n * @author Onur Zorluer\n *\n */\n class Resizer {\n  static changeHeightWidth(\n    height,\n    maxHeight,\n    width,\n    maxWidth,\n    minWidth,\n    minHeight,\n    forceResize,\n  ) {\n    if( forceResize === true ) {\n      height = maxHeight;\n      width = maxWidth;\n    } else {\n      if (width > maxWidth) {\n        height = Math.round((height * maxWidth) / width);\n        width = maxWidth;\n      }\n      if (height > maxHeight) {\n        width = Math.round((width * maxHeight) / height);\n        height = maxHeight;\n      }\n      if (minWidth && width < minWidth) {\n        height = Math.round((height * minWidth) / width);\n        width = minWidth;\n      }\n      if (minHeight && height < minHeight) {\n        width = Math.round((width * minHeight) / height);\n        height = minHeight;\n      }\n    }\n    return { height, width };\n  }\n\n  static resizeAndRotateImage(\n    image,\n    maxWidth,\n    maxHeight,\n    minWidth,\n    minHeight,\n    forceResize,\n    compressFormat = \"jpeg\",\n    quality = 100,\n    rotation = 0\n  ) {\n    var canvas = document.createElement(\"canvas\");\n\n    var width = image.width;\n    var height = image.height;\n\n    var newHeightWidth = this.changeHeightWidth(\n      height,\n      maxHeight,\n      width,\n      maxWidth,\n      minWidth,\n      minHeight,\n      forceResize\n    );\n    if (rotation && (rotation === 90 || rotation === 270)) {\n      canvas.width = newHeightWidth.height;\n      canvas.height = newHeightWidth.width;\n    } else {\n      canvas.width = newHeightWidth.width;\n      canvas.height = newHeightWidth.height;\n    }\n\n    width = newHeightWidth.width;\n    height = newHeightWidth.height;\n\n    var ctx = canvas.getContext(\"2d\");\n    ctx.fillStyle = \"rgba(0, 0, 0, 0)\";\n    ctx.fillRect(0, 0, width, height);\n\n    if (rotation) {\n      ctx.rotate((rotation * Math.PI) / 180);\n      if (rotation === 90) {\n        ctx.translate(0, -canvas.width);\n      } else if (rotation === 180) {\n        ctx.translate(-canvas.width, -canvas.height);\n      } else if (rotation === 270) {\n        ctx.translate(-canvas.height, 0);\n      } else if (rotation === 0 || rotation === 360) {\n        ctx.translate(0, 0);\n      }\n    }\n    ctx.drawImage(image, 0, 0, width, height);\n\n    return canvas;\n    //return canvas.toDataURL(`image/${compressFormat}`, qualityDecimal);\n  }\n\n  static b64toByteArrays(b64Data, contentType) {\n    contentType = contentType || \"image/jpeg\";\n    var sliceSize = 512;\n\n    var byteCharacters = atob(\n      b64Data.toString().replace(/^data:image\\/(png|jpeg|jpg|webp);base64,/, \"\")\n    );\n    var byteArrays = [];\n\n    for (var offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n      var slice = byteCharacters.slice(offset, offset + sliceSize);\n\n      var byteNumbers = new Array(slice.length);\n      for (var i = 0; i < slice.length; i++) {\n        byteNumbers[i] = slice.charCodeAt(i);\n      }\n\n      var byteArray = new Uint8Array(byteNumbers);\n\n      byteArrays.push(byteArray);\n    }\n    return byteArrays;\n  }\n\n  static b64toBlob(b64Data, contentType) {\n    const byteArrays = this.b64toByteArrays(b64Data, contentType);\n    var blob = new Blob(byteArrays, { type: contentType, lastModified: new Date() });\n    return blob;\n  }\n\n  static b64toFile(b64Data, fileName, contentType) {\n    const byteArrays = this.b64toByteArrays(b64Data, contentType);\n    const file = new File(byteArrays, fileName, { type: contentType, lastModified: new Date() });\n    return file;\n  }\n\n  static createResizedImage(\n    file,\n    maxWidth,\n    maxHeight,\n    compressFormat,\n    quality,\n    rotation,\n    responseUriFunc,\n    outputType = \"base64\",\n    minWidth = null,\n    minHeight = null,\n    forceResize = false,\n  ) {\n    const reader = new FileReader();\n    if (file) {\n      if (file.type && !file.type.includes(\"image\")) {\n        throw Error(\"File Is NOT Image!\");\n      } else {\n        reader.readAsDataURL(file);\n        reader.onload = () => {\n          var image = new Image();\n          image.src = reader.result;\n          image.onload = function () {\n            var resizedDataUrl = Resizer.resizeAndRotateImage(\n              image,\n              maxWidth,\n              maxHeight,\n              minWidth,\n              minHeight,\n              forceResize,\n              compressFormat,\n              quality,\n              rotation\n            );\n            const contentType = `image/${compressFormat}`;\n            switch (outputType) {\n              case \"blob\":\n                const blob = Resizer.b64toBlob(resizedDataUrl, contentType);\n                responseUriFunc(blob);\n              break;\n              case \"base64\":\n                responseUriFunc(resizedDataUrl);\n              break;\n              case \"file\":\n                let fileName = file.name;\n                let fileNameWithoutFormat = fileName.toString().replace(/(png|jpeg|jpg|webp)$/i, \"\");\n                let newFileName = fileNameWithoutFormat.concat(compressFormat.toString());\n                const newFile = Resizer.b64toFile(resizedDataUrl, newFileName, contentType);\n                responseUriFunc(newFile);\n              break;\n              default:\n                responseUriFunc(resizedDataUrl);\n            }\n          };\n        };\n        reader.onerror = (error) => {\n          throw Error(error);\n        };\n      }\n    } else {\n      throw Error(\"File Not Found!\");\n    }\n  }\n}\nexport default {\n  imageFileResizer: (\n    file,\n    maxWidth,\n    maxHeight,\n    compressFormat,\n    quality,\n    rotation,\n    responseUriFunc,\n    outputType,\n    minWidth,\n    minHeight,\n    forceResize,\n  ) => {\n    return Resizer.createResizedImage(\n      file,\n      maxWidth,\n      maxHeight,\n      compressFormat,\n      quality,\n      rotation,\n      responseUriFunc,\n      outputType,\n      minWidth,\n      minHeight,\n      forceResize,\n    );\n  },\n};","import React, { useState } from \"react\";\n\nexport default function TileCode(props: any) {\n  const [copied, setCopied] = useState(false);\n\n  const copyCode = () => {\n    navigator.clipboard.writeText(props.code)\n    setCopied(true);\n  }\n\n  return (\n    <div className=\"flex items-center justify-center space-x-4 py-3\">\n      <div className=\"flex-shrink-0\">\n        <p className=\"text-xs text-gray-700\">{props.id}.</p>\n      </div>\n\n      <div className=\"flex-1 min-w-0\">\n        <p className=\"text-sm font-medium text-gray-900 truncate\">{props.code}</p>\n      </div>\n      <div>\n        <button\n          type=\"button\"\n          onClick={copyCode}\n          className=\"inline-flex items-center shadow-sm px-2.5 py-0.5 border border-gray-300 text-sm leading-5 font-medium rounded-full text-gray-700 bg-white hover:bg-gray-50\"\n        >\n          { copied &&\n            <span>Copied!</span>\n          }\n\n          { !copied &&\n            <span>Copy</span>\n          }\n\n        </button>\n      </div>\n    </div>\n  );\n}","export function dimensionToPixels(dimension: number) {\n  return dimension * 16;\n}\n\nexport function componentToHex(c) {\n  var hex = c.toString(16);\n  return hex.length === 1 ? \"0\" + hex : hex;\n}\n\nexport function rgbToHex(r, g, b) {\n  return componentToHex(r) + componentToHex(g) + componentToHex(b);\n}\n\nexport function websafeColor(color) {\n  let quantum = 255 / 5;\n  return quantum * Math.floor((color + (quantum / 2)) / quantum );\n}\n\nexport function rgbToWebsafeHex(r, g, b) {\n  r = websafeColor(r);\n  g = websafeColor(g);\n  b = websafeColor(b);\n\n  let hex = rgbToHex(r, g, b);\n  hex = hex.split('');\n\n  let safe = [];\n\n  for(let i = 0; i < hex.length; i++) {\n    if( i % 2 !== 0 ) safe.push(hex[i]);\n  }\n   \n  return safe.join('');\n}","import React, { useState, useEffect } from \"react\";\n\nimport \"./css/ImageDisplay.scss\";\n\nimport Resizer from \"../utils/ImageResizer\";\nimport TileCode from \"./TileCode\";\n\nimport { rgbToWebsafeHex, dimensionToPixels } from \"../utils/ImageUtils\";\n\nexport default function ImageDisplay(props: any) {\n  const [resizedImage, setResizedImage] = useState<any>();\n  const [imageColors, setImageColors] = useState<any>([]);\n  const [tileCode, setTileCode] = useState<any>([]);\n\n  function processColours(canvas: any, width: number, height: number): Array<string> {\n    let colorArray = [];\n    let ctx = canvas.getContext(\"2d\");\n    if( !ctx ) return [\"\"];\n  \n    for( let y = 0; y < height; y++ ) {\n      for( let x = 0; x < width; x++ ) {\n        let rgb = ctx.getImageData(x,y,1,1).data;\n        colorArray.push(rgbToWebsafeHex(rgb[0], rgb[1], rgb[2]));\n      }\n    }\n    \n    return colorArray;\n  }\n\n  function generateWebSafeImage(width: number, height: number) {\n    let canvas = document.createElement(\"canvas\");\n    canvas.width = width;\n    canvas.height = height;\n\n    let ctx = canvas.getContext('2d');\n    if( !ctx ) return;\n\n    ctx.fillStyle = \"rgba(255,255,255,255)\";\n    ctx.fillRect(0, 0, width, height);\n\n    let colorIndex = 0;\n\n    for( let y = 0; y < height; y++ ) {\n      for( let x = 0; x < width; x++ ) {\n        if( colorIndex < imageColors.length ) {\n          ctx.fillStyle = `#${imageColors[colorIndex]}`;\n          ctx.fillRect(x, y, 1, 1);\n        }\n\n        colorIndex++;\n      }\n    }\n\n    return canvas.toDataURL(`image/PNG`, 1);\n  }\n\n  function processTileCode( colorArray: Array<string>, width: number, height: number) {\n    let tileArray = new Array(props.rows * props.cols).fill([]);\n\n    let pixelRowIndex = 0;\n    let rowIndex = 0;\n\n    for( let pixelSliceIndex = 0; pixelSliceIndex < colorArray.length; pixelSliceIndex += width ) {\n      let pixelSlice = colorArray.slice(pixelSliceIndex, pixelSliceIndex + width);\n\n      for( let i = 0; i < props.cols; i++ ) {\n        let index = i + (rowIndex * props.cols);\n        let arr = tileArray[index];\n        let slice = pixelSlice.slice(i * 16, (i + 1) * 16);\n\n        tileArray[index] = arr.concat(slice);\n      }\n      \n      pixelRowIndex++;\n\n      if( (pixelRowIndex) % (height / props.rows) === 0 ) {\n        rowIndex++;\n      }\n      \n    }\n\n    return tileArray;\n  }\n\n  useEffect( () => {\n    if( props.image === \"\" ) return;\n\n    const height = dimensionToPixels(props.rows);\n    const width = dimensionToPixels(props.cols);\n\n    try {\n      Resizer.imageFileResizer(\n        props.image,\n        width,\n        height,\n        \"PNG\",\n        100,\n        0,\n        (rawCanvas: any) => {\n          let colors = processColours(rawCanvas, width, height);\n\n          setImageColors(colors);\n          setTileCode(processTileCode(colors, width, height));\n          setResizedImage(rawCanvas.toDataURL(`image/PNG`, 1));\n        },\n        \"base64\",\n        width,\n        height,\n        true\n      );\n    } catch (err) {\n      //console.log(err);\n    }\n  }, [props.image, props.cols, props.rows] );\n\n  useEffect( () => { \n    const height = dimensionToPixels(props.rows);\n    const width = dimensionToPixels(props.cols);\n\n    let websafeImage = generateWebSafeImage(width, height);\n\n    setResizedImage(websafeImage);\n\n  }, [imageColors]);\n  \n  return (\n    <div>\n      <div className=\"grid grid-cols-2 justify-center items-center\">\n        <div className=\"relative\">\n          <div \n            className=\"absolute inset-0 z-20 grid-background\"\n            style={{\n              backgroundSize: `${100 / props.cols}% ${100 / props.rows}%`,\n            }}\n          >\n          </div>\n          <img className=\"block relative w-full h-auto z-10\" src={resizedImage} alt=\"Pixelmap\" />\n        </div>\n        <div>\n          <p className=\"text-sm text-gray-800 mb-4\">Actual size</p>\n          <img className=\"block w-auto h-auto mx-auto\" src={resizedImage} alt=\"Pixelmap\" />\n        </div>\n      </div>\n\n      <div className=\"my-12\">\n        <h3 className=\"text-2xl font-bold\">Tile code</h3>\n\n        <div className=\"mt-4 border-t border-b border-gray-200 divide-y divide-gray-200\">\n          {tileCode.map((tile: Array<string>, tileId: number) => (\n            <TileCode key={tileId} id={tileId + 1} code={tile.join('')} />\n          ))}\n        </div>\n\n      </div>\n    </div>\n  );\n}","import React, { useState } from \"react\";\n\nimport ImageUpload from \"./ImageUpload\";\nimport GridSelect from \"./GridSelect\";\nimport ImageDisplay from \"./ImageDisplay\";\n\nexport default function Home() {\n  const [img, setImg] = useState();\n\n  const [{col, row}, setGrid] = useState({\n    col: 1,\n    row: 1\n  });\n\n  const handleImageChange = (src: any) => {\n    setImg(src);\n  }\n\n  const handleGridSelect = (col: number, row: number) => {\n    setGrid({\n      col: col,\n      row: row\n    });\n  }\n\n  return (\n    <div>\n      <main>\n        <div className=\"relative py-12 sm:py-16 border-b border-gray-300\">\n          <div className=\"container max-w-3xl mx-auto text-center\">\n            <h1 className=\"text-4xl font-bold text-gray-900 mb-2\">PixelMap Image Generator</h1>\n            <p className=\"text-gray-700\">Convert your images to code that you can upload straight to your PixelMap tiles!</p>\n            <div className=\"my-8\">\n              <div className=\"lg:flex lg:space-between space-y-4 lg:space-y-0 lg:space-x-6\">\n                <ImageUpload changeImage={handleImageChange} />\n                <GridSelect changeGrid={handleGridSelect} col={col} row={row} />\n              </div>\n              \n            </div>\n\n            <div className=\"my-12\">\n              <ImageDisplay image={img} cols={col} rows={row} />\n            </div>\n          </div>\n        </div>\n\n      </main>\n\n      {/* Footer section */}\n      <footer className=\"py-12 lg:py-24\">\n        <div className=\"mx-auto max-w-md px-4 overflow-hidden sm:max-w-3xl sm:px-6 lg:max-w-7xl lg:px-8\">\n          <div className=\"text-center text-base text-gray-400\">\n            <a href=\"https://www.twitter.com/0xDazzle\" target=\"_blank\" rel=\"noreferrer\" className=\"hover:text-indigo-600 transition duration-150\">A project by OxDazzle</a>\n          </div>\n        </div>\n      </footer>\n    </div>\n  )\n}\n","import Home from './components/Home';\n\nfunction App() {\n  return (\n    <Home />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nimport './index.css';\n\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}